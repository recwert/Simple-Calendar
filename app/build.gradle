apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.3"

    defaultConfig {
        applicationId "com.simplemobiletools.calendar"
        minSdkVersion 16
        targetSdkVersion 25
        versionCode 77
        versionName "2.5.0"
        multiDexEnabled true
    }

    signingConfigs {
        release
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    packagingOptions {
        exclude 'META-INF/commons_release.kotlin_module'
    }
}

dependencies {
    compile 'com.simplemobiletools:commons:2.18.0'
    compile 'joda-time:joda-time:2.9.1'
    compile 'com.facebook.stetho:stetho:1.4.1'
    compile 'com.bignerdranch.android:recyclerview-multiselect:0.2'
    compile 'com.android.support:multidex:1.0.1'
    compile ("org.jetbrains.anko:anko:$anko_version"){
        exclude group : 'com.google.android', module: 'android'
    }
    // Anko Commons
    compile "org.jetbrains.anko:anko-commons:$anko_version"
    // Anko Layouts
    compile "org.jetbrains.anko:anko-sdk25:$anko_version" // sdk15, sdk19, sdk21, sdk23 are also available
    compile "org.jetbrains.anko:anko-appcompat-v7:$anko_version"
    // Anko SQLite
    compile "org.jetbrains.anko:anko-sqlite:$anko_version"

    /*compile 'com.google.code.gson:gson:2.8.0'
    compile('com.google.http-client:google-http-client-gson:1.22.0') {
        exclude group: 'org.apache.httpcomponents'
    }

    compile 'com.google.android.gms:play-services-auth:10.0.1'
    compile('com.google.api-client:google-api-client-android:1.22.0') {
        exclude group: 'org.apache.httpcomponents'
    }
    compile('com.google.apis:google-api-services-calendar:v3-rev230-1.22.0') {
        exclude group: 'org.apache.httpcomponents'
    }*/

    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
}

buildscript {
    ext.kotlin_version = '1.1.2-4'
    repositories {
        mavenCentral()
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jetbrains.kotlin:kotlin-android-extensions:$kotlin_version"


    }
}

def Properties props = new Properties()
def propFile = new File('signing.properties')
if (propFile.canRead()) {
    props.load(new FileInputStream(propFile))

    if (props != null && props.containsKey('STORE_FILE') && props.containsKey('KEY_ALIAS') && props.containsKey('PASSWORD')) {
        android.signingConfigs.release.storeFile = file(props['STORE_FILE'])
        android.signingConfigs.release.storePassword = props['PASSWORD']
        android.signingConfigs.release.keyAlias = props['KEY_ALIAS']
        android.signingConfigs.release.keyPassword = props['PASSWORD']
    } else {
        println 'signing.properties found but some entries are missing'
        android.buildTypes.release.signingConfig = null
    }
} else {
    println 'signing.properties not found'
    android.buildTypes.release.signingConfig = null
}
